
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import *
import tkinter as tk
from PIL import Image,ImageTk,ImageSequence
import threading
from time import sleep
import _thread
from gif import *

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1268x799")
window.configure(bg = "#FFFFFF")

Animation="assets\StartScreen.gif"

class Gif (tk.Label):

	def __init__(self, root, gif):
		# Initialize Label
		tk.Label.__init__(self, root)
		# Set gif
		self._img  = tk.PhotoImage(file=gif)
		self.image = self._img
		self.configure(image=self._img)


	# Call this method to start the animation of the gif
	def animate(self, threaded=True, interval=150, n_repeats=-1):
		self.n_repeats = n_repeats

		if threaded:
			animator = threading.Thread(
									target = self._play_gif, 
									args = (interval, ))
			animator.start()
		else:
			self._play_gif(interval)
		

	def _play_gif(self, interval):
		# Preparing animation
		self.configure(image=self._img) 
		self.frame = 0
		self.repeats = 0
		sleep(interval)
		self._next_frame(interval)
            
    # This method runs recursive till the number of repetitions
   	# is reaced
	def _next_frame(self, interval):
		try:
			# Setting the next frame of the gif
			opt = "GIF -index {}".format(self.frame)
			self._img.configure(format=opt)
		except tk.TclError:
			# A TclError indicates that the maximum number of frames
			# has been reached
			self.frame = 0
			self.repeats += 1
			# In case the number of repeats has been set to a positive 
			# number check if the number of repeats has been exceded.
			if (self.repeats >= self.n_repeats and self.n_repeats > 0):
				opt = "GIF -index {}".format(0)
				self._img.configure(format=opt)
				return
			else:
				# Restart animation
				self._next_frame(interval)
				return
 		
 		# Go to next frame and wait for interval to show next frame
		self.frame += 1
		self.after(interval, self._next_frame, interval)

canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 799,
    width = 1268,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)


gif=Gif(window,gif=Animation)

gif.pack()
gif.animate(threaded=False, interval=10, n_repeats=-1)
canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    634.0000000000002,
    399.9999999999998,
    image=image_image_1
)

canvas.create_text(
    124.99999999999977,
    651.0000000000002,
    anchor="nw",
    text="-----   Lets Start Jupiterization   -----",
    fill="#FFFFFF",
    font=("GRANDGALAXY", 39 * -1)
)
window.resizable(False, False)
window.mainloop()
